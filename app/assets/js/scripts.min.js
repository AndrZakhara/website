/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
let inputValue = '',
    selectedElement = '',
    // previous = false,
    // next = false,
    // parent = false,
    parentNode = '',
    // children = false,
    childrenNode = '';

function createAppStructure() {
  const inputSearch = createElement('input', { className: 'search-input', type: 'text', placeholder: 'Selector' });
  const btnSearch = createElement('input', { className: 'search-btn', type: 'button', value: 'search' });

  const btnPrev = createElement('input', { className: 'prev-btn', type: 'button', value: 'Prev' });
  const btnNext = createElement('input', { className: 'next-btn', type: 'button', value: 'Next' });
  const btnParent = createElement('input', { className: 'parent-btn', type: 'button', value: 'Parent' });
  const btnChildren = createElement('input', { className: 'children-btn', type: 'button', value: 'Children' });

  const textFieldWrapper = createElement('div', { className: 'text-field-wrapper' }, inputSearch, btnSearch);
  const btnWrapper = createElement('div', { className: 'btn-wrapper' }, btnPrev, btnNext, btnParent, btnChildren);

  const mainAppWrapper = createElement('div', { className: 'selector-search-app' }, textFieldWrapper, btnWrapper);

  btnSearch.disabled = true;
  btnPrev.disabled = true;
  btnNext.disabled = true;
  btnParent.disabled = true;
  btnChildren.disabled = true;

  btnSearch.addEventListener('click', handleSearch);
  inputSearch.addEventListener('input', handleInput);
  btnParent.addEventListener('click', handleParent);

  document.body.insertAdjacentElement('beforeend', mainAppWrapper);
}

const handleSearch = () => {
  inputValue = document.querySelector('.search-input').value;
  document.querySelector('.search-input').value = '';
  document.querySelector('.search-btn').disabled = true;
  addClass();
};

const handleInput = (e) => {
  (e.target.value === '')
    ? document.querySelector('.search-btn').disabled = true
    :document.querySelector('.search-btn').disabled = false
};

const handleParent = () => {
  selectedElement.classList.remove('selected-element-search');
  selectedElement = parentNode;
  selectedElement.classList.add('selected-element-search');
  findRelative(selectedElement);
};

const addClass = () => {
  console.log('add class');
  console.log(selectedElement);

  if(selectedElement === '') {
    const selected = document.querySelector(inputValue);

    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
      findRelative(selectedElement);
    }
    // console.log(selectedElement);
  }
  else if(selectedElement !== null || selectedElement !== undefined) {
    selectedElement.classList.remove('selected-element-search');
    const selected = document.querySelector(inputValue);

    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
      findRelative(selectedElement);
    }
  }

  document.querySelector('.search-btn').disabled = true;
  scrollToElement('.selected-element-search');
};

// const removeClass = () => {
//   if(selectedElement !== null || selectedElement !== undefined) {
//     selectedElement.classList.remove('selected-element-search');
//   }
// };

function scrollToElement(theElement) {
  let selectedPosX = 0;
  let selectedPosY = 0;

  if (typeof theElement === "string") theElement = document.querySelector(theElement);

    while (theElement !== null) {
        selectedPosX += theElement.offsetLeft;
        selectedPosY += theElement.offsetTop;
        theElement = theElement.offsetParent;
    }

    selectedPosY = selectedPosY-20;
    window.scrollTo(selectedPosX, selectedPosY);
}

function appInit() {
  createAppStructure();
}

function findRelative(element) {
  const tagNameParent = element.parentNode.tagName;
  const child = element.children[0];
  // console.log(element.childNodes);
  console.log(`tag: ${tagNameParent}`);
  console.log(`tagChild: ${child}`);

  if(element.parentNode !== undefined
    && tagNameParent !== 'BODY'
    && tagNameParent !== 'HTML'
    && tagNameParent !== 'document'
    && tagNameParent !== undefined
    ) {
    console.log(element.parentNode);
    document.querySelector('.parent-btn').disabled = false;
    parentNode = element.parentNode;
  }
  else {
    document.querySelector('.parent-btn').disabled = true;
    parentNode = '';
  }

  if(child !== undefined) {
    document.querySelector('.children-btn').disabled = false;
    childrenNode = child.tagName;
  }
  else {
    document.querySelector('.children-btn').disabled = true;
    childrenNode = '';
  }
}

function createElement(tag, props, ...children) {
  const element = document.createElement(tag);

  Object.keys(props).forEach(key => (element[key] = props[key]));

  children.forEach(child => {

    if (typeof child === "string") {
      child = document.createTextNode(child);
    }

    element.appendChild(child);
  });

  return element;
}

document.addEventListener("DOMContentLoaded", appInit);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJzY3JpcHRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBpbnB1dFZhbHVlID0gJycsXHJcbiAgICBzZWxlY3RlZEVsZW1lbnQgPSAnJyxcclxuICAgIC8vIHByZXZpb3VzID0gZmFsc2UsXHJcbiAgICAvLyBuZXh0ID0gZmFsc2UsXHJcbiAgICAvLyBwYXJlbnQgPSBmYWxzZSxcclxuICAgIHBhcmVudE5vZGUgPSAnJyxcclxuICAgIC8vIGNoaWxkcmVuID0gZmFsc2UsXHJcbiAgICBjaGlsZHJlbk5vZGUgPSAnJztcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUFwcFN0cnVjdHVyZSgpIHtcclxuICBjb25zdCBpbnB1dFNlYXJjaCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdzZWFyY2gtaW5wdXQnLCB0eXBlOiAndGV4dCcsIHBsYWNlaG9sZGVyOiAnU2VsZWN0b3InIH0pO1xyXG4gIGNvbnN0IGJ0blNlYXJjaCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdzZWFyY2gtYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnc2VhcmNoJyB9KTtcclxuXHJcbiAgY29uc3QgYnRuUHJldiA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdwcmV2LWJ0bicsIHR5cGU6ICdidXR0b24nLCB2YWx1ZTogJ1ByZXYnIH0pO1xyXG4gIGNvbnN0IGJ0bk5leHQgPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAnbmV4dC1idG4nLCB0eXBlOiAnYnV0dG9uJywgdmFsdWU6ICdOZXh0JyB9KTtcclxuICBjb25zdCBidG5QYXJlbnQgPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAncGFyZW50LWJ0bicsIHR5cGU6ICdidXR0b24nLCB2YWx1ZTogJ1BhcmVudCcgfSk7XHJcbiAgY29uc3QgYnRuQ2hpbGRyZW4gPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAnY2hpbGRyZW4tYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnQ2hpbGRyZW4nIH0pO1xyXG5cclxuICBjb25zdCB0ZXh0RmllbGRXcmFwcGVyID0gY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICd0ZXh0LWZpZWxkLXdyYXBwZXInIH0sIGlucHV0U2VhcmNoLCBidG5TZWFyY2gpO1xyXG4gIGNvbnN0IGJ0bldyYXBwZXIgPSBjcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ2J0bi13cmFwcGVyJyB9LCBidG5QcmV2LCBidG5OZXh0LCBidG5QYXJlbnQsIGJ0bkNoaWxkcmVuKTtcclxuXHJcbiAgY29uc3QgbWFpbkFwcFdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ3NlbGVjdG9yLXNlYXJjaC1hcHAnIH0sIHRleHRGaWVsZFdyYXBwZXIsIGJ0bldyYXBwZXIpO1xyXG5cclxuICBidG5TZWFyY2guZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGJ0blByZXYuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGJ0bk5leHQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGJ0blBhcmVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgYnRuQ2hpbGRyZW4uZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICBidG5TZWFyY2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVTZWFyY2gpO1xyXG4gIGlucHV0U2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgaGFuZGxlSW5wdXQpO1xyXG4gIGJ0blBhcmVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZVBhcmVudCk7XHJcblxyXG4gIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdiZWZvcmVlbmQnLCBtYWluQXBwV3JhcHBlcik7XHJcbn1cclxuXHJcbmNvbnN0IGhhbmRsZVNlYXJjaCA9ICgpID0+IHtcclxuICBpbnB1dFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC1pbnB1dCcpLnZhbHVlO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtaW5wdXQnKS52YWx1ZSA9ICcnO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtYnRuJykuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGFkZENsYXNzKCk7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVJbnB1dCA9IChlKSA9PiB7XHJcbiAgKGUudGFyZ2V0LnZhbHVlID09PSAnJylcclxuICAgID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC1idG4nKS5kaXNhYmxlZCA9IHRydWVcclxuICAgIDpkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWJ0bicpLmRpc2FibGVkID0gZmFsc2VcclxufTtcclxuXHJcbmNvbnN0IGhhbmRsZVBhcmVudCA9ICgpID0+IHtcclxuICBzZWxlY3RlZEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQtZWxlbWVudC1zZWFyY2gnKTtcclxuICBzZWxlY3RlZEVsZW1lbnQgPSBwYXJlbnROb2RlO1xyXG4gIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG4gIGZpbmRSZWxhdGl2ZShzZWxlY3RlZEVsZW1lbnQpO1xyXG59O1xyXG5cclxuY29uc3QgYWRkQ2xhc3MgPSAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ2FkZCBjbGFzcycpO1xyXG4gIGNvbnNvbGUubG9nKHNlbGVjdGVkRWxlbWVudCk7XHJcblxyXG4gIGlmKHNlbGVjdGVkRWxlbWVudCA9PT0gJycpIHtcclxuICAgIGNvbnN0IHNlbGVjdGVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpbnB1dFZhbHVlKTtcclxuXHJcbiAgICBpZiAoc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCAmJiBzZWxlY3RlZCAhPT0gbnVsbCkge1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3RlZDtcclxuICAgICAgc2VsZWN0ZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiAgICAgIGZpbmRSZWxhdGl2ZShzZWxlY3RlZEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coc2VsZWN0ZWRFbGVtZW50KTtcclxuICB9XHJcbiAgZWxzZSBpZihzZWxlY3RlZEVsZW1lbnQgIT09IG51bGwgfHwgc2VsZWN0ZWRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0VmFsdWUpO1xyXG5cclxuICAgIGlmIChzZWxlY3RlZCAhPT0gdW5kZWZpbmVkICYmIHNlbGVjdGVkICE9PSBudWxsKSB7XHJcbiAgICAgIHNlbGVjdGVkRWxlbWVudCA9IHNlbGVjdGVkO1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQtZWxlbWVudC1zZWFyY2gnKTtcclxuICAgICAgZmluZFJlbGF0aXZlKHNlbGVjdGVkRWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWJ0bicpLmRpc2FibGVkID0gdHJ1ZTtcclxuICBzY3JvbGxUb0VsZW1lbnQoJy5zZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG59O1xyXG5cclxuLy8gY29uc3QgcmVtb3ZlQ2xhc3MgPSAoKSA9PiB7XHJcbi8vICAgaWYoc2VsZWN0ZWRFbGVtZW50ICE9PSBudWxsIHx8IHNlbGVjdGVkRWxlbWVudCAhPT0gdW5kZWZpbmVkKSB7XHJcbi8vICAgICBzZWxlY3RlZEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQtZWxlbWVudC1zZWFyY2gnKTtcclxuLy8gICB9XHJcbi8vIH07XHJcblxyXG5mdW5jdGlvbiBzY3JvbGxUb0VsZW1lbnQodGhlRWxlbWVudCkge1xyXG4gIGxldCBzZWxlY3RlZFBvc1ggPSAwO1xyXG4gIGxldCBzZWxlY3RlZFBvc1kgPSAwO1xyXG5cclxuICBpZiAodHlwZW9mIHRoZUVsZW1lbnQgPT09IFwic3RyaW5nXCIpIHRoZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoZUVsZW1lbnQpO1xyXG5cclxuICAgIHdoaWxlICh0aGVFbGVtZW50ICE9PSBudWxsKSB7XHJcbiAgICAgICAgc2VsZWN0ZWRQb3NYICs9IHRoZUVsZW1lbnQub2Zmc2V0TGVmdDtcclxuICAgICAgICBzZWxlY3RlZFBvc1kgKz0gdGhlRWxlbWVudC5vZmZzZXRUb3A7XHJcbiAgICAgICAgdGhlRWxlbWVudCA9IHRoZUVsZW1lbnQub2Zmc2V0UGFyZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGVjdGVkUG9zWSA9IHNlbGVjdGVkUG9zWS0yMDtcclxuICAgIHdpbmRvdy5zY3JvbGxUbyhzZWxlY3RlZFBvc1gsIHNlbGVjdGVkUG9zWSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcEluaXQoKSB7XHJcbiAgY3JlYXRlQXBwU3RydWN0dXJlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbmRSZWxhdGl2ZShlbGVtZW50KSB7XHJcbiAgY29uc3QgdGFnTmFtZVBhcmVudCA9IGVsZW1lbnQucGFyZW50Tm9kZS50YWdOYW1lO1xyXG4gIGNvbnN0IGNoaWxkID0gZWxlbWVudC5jaGlsZHJlblswXTtcclxuICAvLyBjb25zb2xlLmxvZyhlbGVtZW50LmNoaWxkTm9kZXMpO1xyXG4gIGNvbnNvbGUubG9nKGB0YWc6ICR7dGFnTmFtZVBhcmVudH1gKTtcclxuICBjb25zb2xlLmxvZyhgdGFnQ2hpbGQ6ICR7Y2hpbGR9YCk7XHJcblxyXG4gIGlmKGVsZW1lbnQucGFyZW50Tm9kZSAhPT0gdW5kZWZpbmVkXHJcbiAgICAmJiB0YWdOYW1lUGFyZW50ICE9PSAnQk9EWSdcclxuICAgICYmIHRhZ05hbWVQYXJlbnQgIT09ICdIVE1MJ1xyXG4gICAgJiYgdGFnTmFtZVBhcmVudCAhPT0gJ2RvY3VtZW50J1xyXG4gICAgJiYgdGFnTmFtZVBhcmVudCAhPT0gdW5kZWZpbmVkXHJcbiAgICApIHtcclxuICAgIGNvbnNvbGUubG9nKGVsZW1lbnQucGFyZW50Tm9kZSk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFyZW50LWJ0bicpLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICBwYXJlbnROb2RlID0gZWxlbWVudC5wYXJlbnROb2RlO1xyXG4gIH1cclxuICBlbHNlIHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYXJlbnQtYnRuJykuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgcGFyZW50Tm9kZSA9ICcnO1xyXG4gIH1cclxuXHJcbiAgaWYoY2hpbGQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoaWxkcmVuLWJ0bicpLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICBjaGlsZHJlbk5vZGUgPSBjaGlsZC50YWdOYW1lO1xyXG4gIH1cclxuICBlbHNlIHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaGlsZHJlbi1idG4nKS5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBjaGlsZHJlbk5vZGUgPSAnJztcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnLCBwcm9wcywgLi4uY2hpbGRyZW4pIHtcclxuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xyXG5cclxuICBPYmplY3Qua2V5cyhwcm9wcykuZm9yRWFjaChrZXkgPT4gKGVsZW1lbnRba2V5XSA9IHByb3BzW2tleV0pKTtcclxuXHJcbiAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XHJcblxyXG4gICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICBjaGlsZCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNoaWxkKTtcclxuICAgIH1cclxuXHJcbiAgICBlbGVtZW50LmFwcGVuZENoaWxkKGNoaWxkKTtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIGVsZW1lbnQ7XHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGFwcEluaXQpO1xyXG4iXX0=
