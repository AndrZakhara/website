/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
let inputValue = '';
let selectedElement = '';

function createAppStructure() {
  const inputSearch = createElement('input', { className: 'search-input', type: 'text', placeholder: 'Selector' });
  const btnSearch = createElement('input', { className: 'search-btn', type: 'button', value: 'search' });
   
  const btnPrev = createElement('input', { className: 'prev-btn', type: 'button', value: 'Prev' });
  const btnNext = createElement('input', { className: 'next-btn', type: 'button', value: 'Next' });
  const btnParent = createElement('input', { className: 'parent-btn', type: 'button', value: 'Parent' });
  const btnChildren = createElement('input', { className: 'children-btn', type: 'button', value: 'Children' });
  
  const textFieldWrapper = createElement('div', { className: 'text-field-wrapper' }, inputSearch, btnSearch);
  const btnWrapper = createElement('div', { className: 'btn-wrapper' }, btnPrev, btnNext, btnParent, btnChildren);
  
  const mainAppWrapper = createElement('div', { className: 'selector-search-app' }, textFieldWrapper, btnWrapper);

  btnSearch.addEventListener('click', onclickSearch);

  document.body.insertAdjacentElement('afterBegin', mainAppWrapper);
}

const onclickSearch = (e) => {
  inputValue = document.querySelector('.search-input').value;
  
  document.querySelector('.search-input').value = '';
  console.log(inputValue);
  addClass();
}

const addClass = () => {
  console.log('add class');
  console.log(selectedElement);
  
  if(selectedElement === '') {
    const selected = document.querySelector(inputValue);
    
    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
    }
    console.log(selectedElement); 
    
  } 
  else if(selectedElement !== null || selectedElement !== undefined) {
    selectedElement.classList.remove('selected-element-search');
    const selected = document.querySelector(inputValue);
    
    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
    }
  }
 
}
const removeClass = () => {
  console.log('remove class');
}

function appInit() {
  createAppStructure();
}

function createElement(tag, props, ...children) {
  const element = document.createElement(tag);

  Object.keys(props).forEach(key => (element[key] = props[key]));

  children.forEach(child => {

    if (typeof child === "string") {
      child = document.createTextNode(child);
    }

    element.appendChild(child);
  });

  return element;
}

document.addEventListener("DOMContentLoaded", appInit);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGlucHV0VmFsdWUgPSAnJztcclxubGV0IHNlbGVjdGVkRWxlbWVudCA9ICcnO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQXBwU3RydWN0dXJlKCkge1xyXG4gIGNvbnN0IGlucHV0U2VhcmNoID0gY3JlYXRlRWxlbWVudCgnaW5wdXQnLCB7IGNsYXNzTmFtZTogJ3NlYXJjaC1pbnB1dCcsIHR5cGU6ICd0ZXh0JywgcGxhY2Vob2xkZXI6ICdTZWxlY3RvcicgfSk7XHJcbiAgY29uc3QgYnRuU2VhcmNoID0gY3JlYXRlRWxlbWVudCgnaW5wdXQnLCB7IGNsYXNzTmFtZTogJ3NlYXJjaC1idG4nLCB0eXBlOiAnYnV0dG9uJywgdmFsdWU6ICdzZWFyY2gnIH0pO1xyXG4gICBcclxuICBjb25zdCBidG5QcmV2ID0gY3JlYXRlRWxlbWVudCgnaW5wdXQnLCB7IGNsYXNzTmFtZTogJ3ByZXYtYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnUHJldicgfSk7XHJcbiAgY29uc3QgYnRuTmV4dCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICduZXh0LWJ0bicsIHR5cGU6ICdidXR0b24nLCB2YWx1ZTogJ05leHQnIH0pO1xyXG4gIGNvbnN0IGJ0blBhcmVudCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdwYXJlbnQtYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnUGFyZW50JyB9KTtcclxuICBjb25zdCBidG5DaGlsZHJlbiA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdjaGlsZHJlbi1idG4nLCB0eXBlOiAnYnV0dG9uJywgdmFsdWU6ICdDaGlsZHJlbicgfSk7XHJcbiAgXHJcbiAgY29uc3QgdGV4dEZpZWxkV3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsgY2xhc3NOYW1lOiAndGV4dC1maWVsZC13cmFwcGVyJyB9LCBpbnB1dFNlYXJjaCwgYnRuU2VhcmNoKTtcclxuICBjb25zdCBidG5XcmFwcGVyID0gY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICdidG4td3JhcHBlcicgfSwgYnRuUHJldiwgYnRuTmV4dCwgYnRuUGFyZW50LCBidG5DaGlsZHJlbik7XHJcbiAgXHJcbiAgY29uc3QgbWFpbkFwcFdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ3NlbGVjdG9yLXNlYXJjaC1hcHAnIH0sIHRleHRGaWVsZFdyYXBwZXIsIGJ0bldyYXBwZXIpO1xyXG5cclxuICBidG5TZWFyY2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbmNsaWNrU2VhcmNoKTtcclxuXHJcbiAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyQmVnaW4nLCBtYWluQXBwV3JhcHBlcik7XHJcbn1cclxuXHJcbmNvbnN0IG9uY2xpY2tTZWFyY2ggPSAoZSkgPT4ge1xyXG4gIGlucHV0VmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWlucHV0JykudmFsdWU7XHJcbiAgXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC1pbnB1dCcpLnZhbHVlID0gJyc7XHJcbiAgY29uc29sZS5sb2coaW5wdXRWYWx1ZSk7XHJcbiAgYWRkQ2xhc3MoKTtcclxufVxyXG5cclxuY29uc3QgYWRkQ2xhc3MgPSAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ2FkZCBjbGFzcycpO1xyXG4gIGNvbnNvbGUubG9nKHNlbGVjdGVkRWxlbWVudCk7XHJcbiAgXHJcbiAgaWYoc2VsZWN0ZWRFbGVtZW50ID09PSAnJykge1xyXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0VmFsdWUpO1xyXG4gICAgXHJcbiAgICBpZiAoc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCAmJiBzZWxlY3RlZCAhPT0gbnVsbCkge1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3RlZDtcclxuICAgICAgc2VsZWN0ZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZyhzZWxlY3RlZEVsZW1lbnQpOyBcclxuICAgIFxyXG4gIH0gXHJcbiAgZWxzZSBpZihzZWxlY3RlZEVsZW1lbnQgIT09IG51bGwgfHwgc2VsZWN0ZWRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0VmFsdWUpO1xyXG4gICAgXHJcbiAgICBpZiAoc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCAmJiBzZWxlY3RlZCAhPT0gbnVsbCkge1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3RlZDtcclxuICAgICAgc2VsZWN0ZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gXHJcbn1cclxuY29uc3QgcmVtb3ZlQ2xhc3MgPSAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ3JlbW92ZSBjbGFzcycpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhcHBJbml0KCkge1xyXG4gIGNyZWF0ZUFwcFN0cnVjdHVyZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50KHRhZywgcHJvcHMsIC4uLmNoaWxkcmVuKSB7XHJcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcclxuXHJcbiAgT2JqZWN0LmtleXMocHJvcHMpLmZvckVhY2goa2V5ID0+IChlbGVtZW50W2tleV0gPSBwcm9wc1trZXldKSk7XHJcblxyXG4gIGNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xyXG5cclxuICAgIGlmICh0eXBlb2YgY2hpbGQgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgY2hpbGQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjaGlsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgZWxlbWVudC5hcHBlbmRDaGlsZChjaGlsZCk7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBlbGVtZW50O1xyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBhcHBJbml0KTtcclxuIl19
