/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
let inputValue = '';
let selectedElement = '';

function createAppStructure() {
  const inputSearch = createElement('input', { className: 'search-input', type: 'text', placeholder: 'Selector' });
  const btnSearch = createElement('input', { className: 'search-btn', type: 'button', value: 'search' });
   
  const btnPrev = createElement('input', { className: 'prev-btn', type: 'button', value: 'Prev' });
  const btnNext = createElement('input', { className: 'next-btn', type: 'button', value: 'Next' });
  const btnParent = createElement('input', { className: 'parent-btn', type: 'button', value: 'Parent' });
  const btnChildren = createElement('input', { className: 'children-btn', type: 'button', value: 'Children' });
  
  const textFieldWrapper = createElement('div', { className: 'text-field-wrapper' }, inputSearch, btnSearch);
  const btnWrapper = createElement('div', { className: 'btn-wrapper' }, btnPrev, btnNext, btnParent, btnChildren);
  
  const mainAppWrapper = createElement('div', { className: 'selector-search-app' }, textFieldWrapper, btnWrapper);
  
  btnSearch.disabled = true;
  btnSearch.addEventListener('click', onclickSearch);
  inputSearch.addEventListener('input', (e) => {
    if(e.target.value === '') {
      document.querySelector('.search-btn').disabled = true;
    } else {
      document.querySelector('.search-btn').disabled = false;
    };
  })

  document.body.insertAdjacentElement('afterBegin', mainAppWrapper);
}

const onclickSearch = (e) => {
  inputValue = document.querySelector('.search-input').value;
  
  document.querySelector('.search-input').value = '';
  console.log(inputValue);
  addClass();
}

const addClass = () => {
  console.log('add class');
  console.log(selectedElement);
  
  if(selectedElement === '') {
    const selected = document.querySelector(inputValue);
    
    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
    }
    console.log(selectedElement); 
    
  } 
  else if(selectedElement !== null || selectedElement !== undefined) {
    selectedElement.classList.remove('selected-element-search');
    const selected = document.querySelector(inputValue);
    
    if (selected !== undefined && selected !== null) {
      selectedElement = selected;
      selectedElement.classList.add('selected-element-search');
    }
  }
  scrollToElement('.selected-element-search');
 
}
const removeClass = () => {
  if(selectedElement !== null || selectedElement !== undefined) {
    selectedElement.classList.remove('selected-element-search');
  }
}

function scrollToElement(theElement) {
    if (typeof theElement === "string") theElement = document.querySelector(theElement);
    var selectedPosX = 0;
    var selectedPosY = 0;
    while (theElement != null) {
        selectedPosX += theElement.offsetLeft;
        selectedPosY += theElement.offsetTop;
        theElement = theElement.offsetParent;
    }
    window.scrollTo(selectedPosX, selectedPosY);
}

function appInit() {
  createAppStructure();
}

function createElement(tag, props, ...children) {
  const element = document.createElement(tag);

  Object.keys(props).forEach(key => (element[key] = props[key]));

  children.forEach(child => {

    if (typeof child === "string") {
      child = document.createTextNode(child);
    }

    element.appendChild(child);
  });

  return element;
}

document.addEventListener("DOMContentLoaded", appInit);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJzY3JpcHRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBpbnB1dFZhbHVlID0gJyc7XHJcbmxldCBzZWxlY3RlZEVsZW1lbnQgPSAnJztcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUFwcFN0cnVjdHVyZSgpIHtcclxuICBjb25zdCBpbnB1dFNlYXJjaCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdzZWFyY2gtaW5wdXQnLCB0eXBlOiAndGV4dCcsIHBsYWNlaG9sZGVyOiAnU2VsZWN0b3InIH0pO1xyXG4gIGNvbnN0IGJ0blNlYXJjaCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdzZWFyY2gtYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnc2VhcmNoJyB9KTtcclxuICAgXHJcbiAgY29uc3QgYnRuUHJldiA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgeyBjbGFzc05hbWU6ICdwcmV2LWJ0bicsIHR5cGU6ICdidXR0b24nLCB2YWx1ZTogJ1ByZXYnIH0pO1xyXG4gIGNvbnN0IGJ0bk5leHQgPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAnbmV4dC1idG4nLCB0eXBlOiAnYnV0dG9uJywgdmFsdWU6ICdOZXh0JyB9KTtcclxuICBjb25zdCBidG5QYXJlbnQgPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAncGFyZW50LWJ0bicsIHR5cGU6ICdidXR0b24nLCB2YWx1ZTogJ1BhcmVudCcgfSk7XHJcbiAgY29uc3QgYnRuQ2hpbGRyZW4gPSBjcmVhdGVFbGVtZW50KCdpbnB1dCcsIHsgY2xhc3NOYW1lOiAnY2hpbGRyZW4tYnRuJywgdHlwZTogJ2J1dHRvbicsIHZhbHVlOiAnQ2hpbGRyZW4nIH0pO1xyXG4gIFxyXG4gIGNvbnN0IHRleHRGaWVsZFdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ3RleHQtZmllbGQtd3JhcHBlcicgfSwgaW5wdXRTZWFyY2gsIGJ0blNlYXJjaCk7XHJcbiAgY29uc3QgYnRuV3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsgY2xhc3NOYW1lOiAnYnRuLXdyYXBwZXInIH0sIGJ0blByZXYsIGJ0bk5leHQsIGJ0blBhcmVudCwgYnRuQ2hpbGRyZW4pO1xyXG4gIFxyXG4gIGNvbnN0IG1haW5BcHBXcmFwcGVyID0gY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICdzZWxlY3Rvci1zZWFyY2gtYXBwJyB9LCB0ZXh0RmllbGRXcmFwcGVyLCBidG5XcmFwcGVyKTtcclxuICBcclxuICBidG5TZWFyY2guZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGJ0blNlYXJjaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uY2xpY2tTZWFyY2gpO1xyXG4gIGlucHV0U2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKGUpID0+IHtcclxuICAgIGlmKGUudGFyZ2V0LnZhbHVlID09PSAnJykge1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWJ0bicpLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtYnRuJykuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH07XHJcbiAgfSlcclxuXHJcbiAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyQmVnaW4nLCBtYWluQXBwV3JhcHBlcik7XHJcbn1cclxuXHJcbmNvbnN0IG9uY2xpY2tTZWFyY2ggPSAoZSkgPT4ge1xyXG4gIGlucHV0VmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWlucHV0JykudmFsdWU7XHJcbiAgXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC1pbnB1dCcpLnZhbHVlID0gJyc7XHJcbiAgY29uc29sZS5sb2coaW5wdXRWYWx1ZSk7XHJcbiAgYWRkQ2xhc3MoKTtcclxufVxyXG5cclxuY29uc3QgYWRkQ2xhc3MgPSAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ2FkZCBjbGFzcycpO1xyXG4gIGNvbnNvbGUubG9nKHNlbGVjdGVkRWxlbWVudCk7XHJcbiAgXHJcbiAgaWYoc2VsZWN0ZWRFbGVtZW50ID09PSAnJykge1xyXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0VmFsdWUpO1xyXG4gICAgXHJcbiAgICBpZiAoc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCAmJiBzZWxlY3RlZCAhPT0gbnVsbCkge1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3RlZDtcclxuICAgICAgc2VsZWN0ZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZyhzZWxlY3RlZEVsZW1lbnQpOyBcclxuICAgIFxyXG4gIH0gXHJcbiAgZWxzZSBpZihzZWxlY3RlZEVsZW1lbnQgIT09IG51bGwgfHwgc2VsZWN0ZWRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0VmFsdWUpO1xyXG4gICAgXHJcbiAgICBpZiAoc2VsZWN0ZWQgIT09IHVuZGVmaW5lZCAmJiBzZWxlY3RlZCAhPT0gbnVsbCkge1xyXG4gICAgICBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3RlZDtcclxuICAgICAgc2VsZWN0ZWRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNjcm9sbFRvRWxlbWVudCgnLnNlbGVjdGVkLWVsZW1lbnQtc2VhcmNoJyk7XHJcbiBcclxufVxyXG5jb25zdCByZW1vdmVDbGFzcyA9ICgpID0+IHtcclxuICBpZihzZWxlY3RlZEVsZW1lbnQgIT09IG51bGwgfHwgc2VsZWN0ZWRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIHNlbGVjdGVkRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZC1lbGVtZW50LXNlYXJjaCcpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2Nyb2xsVG9FbGVtZW50KHRoZUVsZW1lbnQpIHtcclxuICAgIGlmICh0eXBlb2YgdGhlRWxlbWVudCA9PT0gXCJzdHJpbmdcIikgdGhlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhlRWxlbWVudCk7XHJcbiAgICB2YXIgc2VsZWN0ZWRQb3NYID0gMDtcclxuICAgIHZhciBzZWxlY3RlZFBvc1kgPSAwO1xyXG4gICAgd2hpbGUgKHRoZUVsZW1lbnQgIT0gbnVsbCkge1xyXG4gICAgICAgIHNlbGVjdGVkUG9zWCArPSB0aGVFbGVtZW50Lm9mZnNldExlZnQ7XHJcbiAgICAgICAgc2VsZWN0ZWRQb3NZICs9IHRoZUVsZW1lbnQub2Zmc2V0VG9wO1xyXG4gICAgICAgIHRoZUVsZW1lbnQgPSB0aGVFbGVtZW50Lm9mZnNldFBhcmVudDtcclxuICAgIH1cclxuICAgIHdpbmRvdy5zY3JvbGxUbyhzZWxlY3RlZFBvc1gsIHNlbGVjdGVkUG9zWSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcEluaXQoKSB7XHJcbiAgY3JlYXRlQXBwU3RydWN0dXJlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnLCBwcm9wcywgLi4uY2hpbGRyZW4pIHtcclxuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xyXG5cclxuICBPYmplY3Qua2V5cyhwcm9wcykuZm9yRWFjaChrZXkgPT4gKGVsZW1lbnRba2V5XSA9IHByb3BzW2tleV0pKTtcclxuXHJcbiAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XHJcblxyXG4gICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICBjaGlsZCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNoaWxkKTtcclxuICAgIH1cclxuXHJcbiAgICBlbGVtZW50LmFwcGVuZENoaWxkKGNoaWxkKTtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIGVsZW1lbnQ7XHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGFwcEluaXQpO1xyXG4iXX0=
