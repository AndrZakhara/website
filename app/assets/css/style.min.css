/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{font-family:Titillium Web;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{height:93px;max-width:1280px;margin:0 auto}.logo{float:left;position:relative;top:56px;margin-left:42px}.logo img{width:118px;height:36px}.navbar{position:relative;top:65px}.topnav{list-style-type:none;margin:0;padding:0;overflow:hidden;float:right}.topnav li{float:left}.topnav li a{display:block;color:#fff;text-align:center;padding:2px 16px;text-decoration:none;text-transform:uppercase;border-radius:3px}.topnav li a.active,.topnav li a:hover:not(.active){background-color:#636}a{text-decoration:none;color:#232323;transition:color .3s ease}a:hover{color:tomato}#menuToggle{display:block;position:relative;top:50px;left:50px;z-index:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#menuToggle input{margin-left:80%;display:block;width:40px;height:32px;position:absolute;top:14px;left:-5px;cursor:pointer;opacity:0;z-index:2;-webkit-touch-callout:none}#menuToggle span{margin-left:80%;top:20px;display:block;width:33px;height:4px;margin-bottom:5px;position:relative;background:#cdcdcd;border-radius:3px;z-index:1;transform-origin:4px 0;transition:transform .5s cubic-bezier(.77,.2,.05,1),background .5s cubic-bezier(.77,.2,.05,1),opacity .55s ease}#menuToggle span:first-child{transform-origin:0 0}#menuToggle span:nth-last-child(2){transform-origin:0 100%}#menuToggle input:checked~span{opacity:1;transform:rotate(45deg) translate(-2px,-1px);background:#232323}#menuToggle input:checked~span:nth-last-child(3){opacity:0;transform:rotate(0deg) scale(.2)}#menuToggle input:checked~span:nth-last-child(2){transform:rotate(-45deg) translateY(-1px)}#menu{position:absolute;width:300px;margin:-100px 0 0 -50px;padding:50px;padding-top:125px;background:#ededed;list-style-type:none;-webkit-font-smoothing:antialiased;transform-origin:0 0;transform:translate(-100%);transition:transform .5s cubic-bezier(.77,.2,.05,1)}#menu li{padding:10px 0;font-size:22px}#menuToggle input:checked~ul{transform:none}.welcome{color:#fff;width:100%;margin:0 auto;height:160px;position:absolute;top:50%;margin-top:-50px}.greeting{max-width:620px;margin:0 auto}.greeting h2,.section-header{text-align:center}.section-header h2{margin:0;color:#fff;padding-bottom:21px}.header-line{width:87px;height:4px;margin:0 auto;background-color:rgba(0,0,0,.15);margin-bottom:21px}.section-item{width:25%;height:507px;text-align:center;float:left;padding:70px 32px;box-sizing:border-box}.l-section-items{max-width:1280px;margin:0 auto}.footer{height:112px;background-color:#344b8e}.nav-social{margin:0 auto;position:relative;top:35px;max-width:1280px}.footer-nav{list-style-type:none;margin:0;padding:0 4%;overflow:hidden;float:left;width:100%}.footer-nav li{float:left;margin:0 3.4%}.footer-nav li a{display:block;color:#fff;text-align:center;padding:2px 16px;text-decoration:none;border-radius:3px}.footer-nav li a.active{color:#30bae7}.l-content{padding:80px 0;min-height:100vh}.l-content--form{background-color:#3c5499;color:#fff}.l-content--services{background-color:#17c2a4;color:#fff}.l-content--team{background-color:#e7f1f8;color:#3c4661}.l-content--skills{background-color:#fff;color:#3c4661}.l-content--portfolio{background-color:#fd9;color:#393939}.l-content--about{background-color:#d74680;color:#fff}.l-container{max-width:1280px;margin:0 auto}.section-title--mb-form{margin-bottom:110px}.section-title__header{text-align:center}.section-title__header h2{margin:0;padding-bottom:21px}.section-title__line{width:87px;height:4px;margin:0 auto;background-color:rgba(0,0,0,.15);margin-bottom:21px}.section-title__info{text-align:center;max-width:700px;margin:0 auto}.contact-form__input-text--main{border:0;border-radius:4px;background-color:#273a71;color:#fff;height:56px;min-width:47.7%;margin:0 0 32px;padding:0 20px;box-sizing:border-box}.contact-form__input-text--main:-ms-input-placeholder:after{content:"*";color:red}.contact-form__input-text--main::placeholder:after{content:"*";color:red}.contact-form__input-text--main-fr{float:right}.contact-form__input-text--main-fl{float:left}.contact-form__textarea--main{display:block;border:0;border-radius:4px;background-color:#273a71;color:#fff;width:100%;height:200px;padding:0 20px;margin-bottom:50px;box-sizing:border-box}.contact-form__textarea--main:-ms-input-placeholder:after{content:"*";color:red}.contact-form__textarea--main::placeholder:after{content:"*";color:red}.l-input-form{max-width:860px;margin:0 auto}.btn{display:block;width:293px;height:70px;margin:0 auto;border-radius:5px;outline:0!important;border:none;text-transform:uppercase}.btn--form-color{background-color:#30bae7}.btn--form-color,.btn--welcome-color{border-bottom:4px solid rgba(0,0,0,.15);color:#fff}.btn--welcome-color{background-color:#eb7d4b}.btn--portfolio-color{background-color:#17c2a4;border-bottom:4px solid rgba(0,0,0,.15);color:#fff}.btn:hover{font-size:1.1em;cursor:pointer}.section-content{display:inline-block;box-sizing:border-box;margin-bottom:20px}.section-content--portfolio{width:49.8%}.section-content--portfolio img{max-width:80%;height:auto;display:block;margin:0 auto}.section-content--portfolio p{text-align:center}.section-content--services{width:24.7%;text-align:center;padding:0 30px}.section-content--services img{max-width:100%;height:auto;display:block;margin:0 auto}.section-content--team{width:24.7%;text-align:center;padding:0 30px}.section-content--team img{max-width:100%;height:auto;display:block;margin:0 auto}.section-content--about{width:49.8%;text-align:left;padding:0 30px}.section-content--about img{max-width:100px;height:auto;float:left;margin-right:5%}.section-content--about span{max-width:330px;width:64%;display:inline-block}.section-content--about span h4{margin-bottom:0}.section-content--about span p{max-width:330px;margin:0}@font-face{font-family:Titillium Web;font-style:normal;font-weight:400;src:url(../fonts/titillium-web-v6-latin-regular.eot);src:local("Titillium Web Regular"),local("TitilliumWeb-Regular"),url(../fonts/titillium-web-v6-latin-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/titillium-web-v6-latin-regular.woff2) format("woff2"),url(../fonts/titillium-web-v6-latin-regular.woff) format("woff"),url(../fonts/titillium-web-v6-latin-regular.ttf) format("truetype"),url(../fonts/titillium-web-v6-latin-regular.svg#TitilliumWeb) format("svg")}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.l-welcome{background-color:#969;height:100vh;position:relative}.l-services,.l-welcome{min-height:450px;color:#fff}.l-services{padding:80px 0;background-color:#0c9}.clearfix:after{content:"";display:table;clear:both}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
